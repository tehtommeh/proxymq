version: '3.8'

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes

  enqueuer:
    build:
      context: ./enqueuer
    container_name: enqueuer
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      ENQUEUER_POOL_SIZE: 100
    depends_on:
      - rabbitmq
    ports:
      - "8000:8000"

  enqueuer-async:
    build:
      context: ./enqueuer
      dockerfile: Dockerfile.async
    container_name: enqueuer-async
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      ENQUEUER_POOL_SIZE: 100
      REDIS_HOST: redis
      REDIS_PORT: 6379
      ASYNC_JOB_TTL: 3600
      ASYNC_REQUIRE_AUTH: ${ASYNC_REQUIRE_AUTH:-false}
    depends_on:
      - rabbitmq
      - redis
    ports:
      - "8100:8000"

  dequeuer_nginx:
    build:
      context: ./dequeuer
    container_name: dequeuer_nginx
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      DEQUEUER_POOL_SIZE: 100
      SERVICE_NAME: nginx
      DOWNSTREAM_URL: http://nginx:80/
    depends_on:
      - rabbitmq
    ports:
      - "8011:8001"

  dequeuer_google:
    build:
      context: ./dequeuer
    container_name: dequeuer_google
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      DEQUEUER_POOL_SIZE: 100
      SERVICE_NAME: google
      DOWNSTREAM_URL: https://google.com
    depends_on:
      - rabbitmq
    ports:
      - "8012:8001"

  url-fetcher:
    build:
      context: ./url-fetcher
    container_name: url-fetcher
    environment:
      BATCH_SIZE: 100
    ports:
      - "8001:8000"

  dequeuer_url_fetcher:
    build:
      context: ./dequeuer
    container_name: dequeuer_url_fetcher
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      DEQUEUER_POOL_SIZE: 100
      SERVICE_NAME: url_fetcher
      BATCH_MODE: true
      DOWNSTREAM_URL: http://url-fetcher:8000/fetch
      BATCH_DOWNSTREAM_URL: http://url-fetcher:8000/fetch/batch
    depends_on:
      - rabbitmq
      - url-fetcher
    ports:
      - "8013:8001"

  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"

  httpbin:
    image: kennethreitz/httpbin
    container_name: httpbin
    ports:
      - "8090:80"

  dequeuer_httpbin:
    build:
      context: ./dequeuer
    container_name: dequeuer_httpbin
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      DEQUEUER_POOL_SIZE: 100
      SERVICE_NAME: httpbin
      DOWNSTREAM_URL: http://httpbin:80/post
    depends_on:
      - rabbitmq
      - httpbin
    ports:
      - "8015:8001"

  test-service:
    build:
      context: ./test-service
    container_name: test-service
    environment:
      REQUEST_PROCESSING_SECONDS: 3.0  # 3 second processing delay for testing
    ports:
      - "8002:8000"

  dequeuer_test:
    build:
      context: ./dequeuer
    container_name: dequeuer_test
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
      DEQUEUER_POOL_SIZE: 100
      SERVICE_NAME: test
      DOWNSTREAM_URL: http://test-service:8000/success
    depends_on:
      - rabbitmq
      - test-service
    ports:
      - "8014:8001"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - "9090:9090"
    depends_on:
      - enqueuer
      - enqueuer-async
      - dequeuer_nginx
      - dequeuer_google
      - dequeuer_httpbin
      - dequeuer_url_fetcher

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
